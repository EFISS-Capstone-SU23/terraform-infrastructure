name: "Terraform Apply"

on:
  push:
    branches:
      - main

env:
  TF_CLOUD_ORGANIZATION: "EFISS"
  TF_API_TOKEN: "${{ secrets.TF_API_TOKEN }}"
  TF_WORKSPACE: "EFISS-terraform-infrastructure"
  CONFIG_DIRECTORY: "./"

jobs:
  setup:
    runs-on: self-hosted

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Create GCP service account 1
      run: 'echo "$LONGNV_GCP" > efiss-terraform-service-account_Longnv.json'
      shell: bash
      env:
        LONGNV_GCP: ${{ secrets.LONGNV_GCP }}
    
    - name: Create GCP service account 2
      run: 'echo "$MINHPVTHE172884FPT" > efiss-terraform-service-account_Minhpvt.json'
      shell: bash
      env:
        MINHPVTHE172884FPT: ${{ secrets.MINHPVTHE172884FPT }}
  
    - name: Create SSH keys
      run: 'echo "$SSH_KEYS" > ssh_keys.txt'
      shell: bash
      env:
        SSH_KEYS: ${{ vars.SSH_KEYS }}

  terraform:
    name: "Terraform Apply"
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Upload Configuration
        uses: hashicorp/tfc-workflows-github/actions/upload-configuration@v1.0.0
        id: apply-upload
        with:
          workspace: ${{ env.TF_WORKSPACE }}
          directory: ${{ env.CONFIG_DIRECTORY }}

      - name: Create Apply Run
        uses: hashicorp/tfc-workflows-github/actions/create-run@v1.0.0
        id: apply-run
        with:
          workspace: ${{ env.TF_WORKSPACE }}
          configuration_version: ${{ steps.apply-upload.outputs.configuration_version_id }}

      - name: Apply
        uses: hashicorp/tfc-workflows-github/actions/apply-run@v1.0.0
        if: fromJSON(steps.apply-run.outputs.payload).data.attributes.actions.IsConfirmable
        id: apply
        with:
          run: ${{ steps.apply-run.outputs.run_id }}
          comment: "Apply Run from GitHub Actions CI ${{ github.sha }}"